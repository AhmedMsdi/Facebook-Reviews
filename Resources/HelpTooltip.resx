<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Helptooltip_6" xml:space="preserve">
    <value>Drag operations</value>
  </data>
  <data name="Helptooltip_7" xml:space="preserve">
    <value>Build your selection by dragging nodes to the window to the right.</value>
  </data>
  <data name="Helptooltip_304" xml:space="preserve">
    <value>Add your survey title. This will appear at the top of the survey and if you post to Facebook and Twitter it will appear in the message that is posted.</value>
  </data>
  <data name="Helptooltip_10" xml:space="preserve">
    <value>Add a name for your selection so it is easy to identify later.</value>
  </data>
  <data name="Helptooltip_2" xml:space="preserve">
    <value>Use the tabs here and above to manage and do more with your selection.</value>
  </data>
  <data name="Helptooltip_3" xml:space="preserve">
    <value>The count shows the number of people in your selection at a contact level and a Household / Company level</value>
  </data>
  <data name="Helptooltip_1" xml:space="preserve">
    <value>You can build queries, view saved selections and load data files from the options below.</value>
  </data>
  <data name="Helptooltip_306" xml:space="preserve">
    <value>This text will appear on a page presented once the survey has been completed</value>
  </data>
  <data name="Helptooltip_11" xml:space="preserve">
    <value>Add more information to help you and others identify what it includes and if necessary what it is for.</value>
  </data>
  <data name="Helptooltip_103" xml:space="preserve">
    <value>Access your saved work or projects your colleagues want to share with you here</value>
  </data>
  <data name="Helptooltip_102" xml:space="preserve">
    <value>This panel will display your recent actions in Atreemo.</value>
  </data>
  <data name="Helptooltip_101" xml:space="preserve">
    <value>Access your Atreemo modules right here </value>
  </data>
  <data name="Helptooltip_104" xml:space="preserve">
    <value>Access your dashboard and review key stats for your campaigns</value>
  </data>
  <data name="Helptooltip_4" xml:space="preserve">
    <value>Open a saved selection</value>
  </data>
  <data name="Helptooltip_305" xml:space="preserve">
    <value>Add your survey introduction. This will appear on the first page of your survey to tell the recipient more about it.</value>
  </data>
  <data name="Helptooltip_303" xml:space="preserve">
    <value>You can set the amount of space (in pixals) you want between questions here</value>
  </data>
  <data name="Helptooltip_302" xml:space="preserve">
    <value>You can add a logo to your survey. Click ‘Choose file’ to locate the file you want to use and then click ‘Upload’. You will then be able to see the placement of your logo when you preview the survey.</value>
  </data>
  <data name="Helptooltip_300" xml:space="preserve">
    <value>Add your survey description.  This is not customer facing, it is something that will help you identify the survey later</value>
  </data>
  <data name="Helptooltip_301" xml:space="preserve">
    <value>Add your survey description. This is not customer facing, it is something that will help you identify the survey later</value>
  </data>
</root>