@model IEnumerable<Atreemo.Models.Rating>

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_OurProjectLayout.cshtml";
}

<h2>Details</h2>
<div class="demo-section k-content wide">
    @(Html.Kendo().Chart(Model)
                                        .Name("chart")
                                        .Title("Evolution des Ratings de la page")
                                        .Legend(legend => legend.Visible(false))
                                        .Series(series =>
                                        {
                                            series.Area(model => model.rating, model => model.created_time)
                                            .Aggregate(ChartSeriesAggregate.Avg)
                                                .Name("Ratings")
                                                .Axis("Ratings");
                                        })
                                        .CategoryAxis(axis => axis
                                       .Date()
                .BaseUnit(ChartAxisBaseUnit.Weeks)
                                        )
                                        .ValueAxis(axis => axis.Numeric("Ratings")
                            .Title("Etoiles")
                            .Min(0).Max(5)
                                        )

    )
</div>
<div class="box wide">
    <div class="box-col">
        <h4>Base date unit</h4>
        <ul class="options">
            <li>
                <input id="baseUnitAuto" name="baseUnit"
                       type="radio" value="" autocomplete="off" />
                <label for="baseUnitAuto">Automatic (default)</label>
            </li>
            <li>
                <input id="baseUnitYears" name="baseUnit"
                       type="radio" value="years" autocomplete="off" />
                <label for="baseUnitYears">Years</label>
            </li>
            <li>
                <input id="baseUnitMonths" name="baseUnit"
                       type="radio" value="months" autocomplete="off" />
                <label for="baseUnitMonths">Months</label>
            </li>
            <li>
                <input id="baseUnitWeeks" name="baseUnit"
                       type="radio" value="weeks" checked="checked" autocomplete="off" />
                <label for="baseUnitWeeks">Weeks</label>
            </li>
            <li>
                <input id="baseUnitDays" name="baseUnit"
                       type="radio" value="days" autocomplete="off" />
                <label for="baseUnitDays">Days</label>
            </li>
        </ul>
    </div>
    <div class="box-col">
        <h4>Aggregate function</h4>
        <ul class="options">
            <li>
                <input id="aggregateMax" name="aggregate"
                       type="radio" value="max" autocomplete="off" />
                <label for="aggregateMax">Max (default)</label>
            </li>
            <li>
                <input id="aggregateMin" name="aggregate"
                       type="radio" value="min" autocomplete="off" />
                <label for="aggregateMin">Min</label>
            </li>
            <li>
                <input id="aggregateSum" name="aggregate"
                       type="radio" value="sum" autocomplete="off" />
                <label for="aggregateSum">Sum</label>
            </li>
            <li>
                <input id="aggregateAvg" name="aggregate"
                       type="radio" value="avg" checked="checked" autocomplete="off" />
                <label for="aggregateAvg">Avg</label>
            </li>
            <li>
                <input id="aggregateCount" name="aggregate"
                       type="radio" value="count" autocomplete="off" />
                <label for="aggregateCount">Count</label>
            </li>
        </ul>
    </div>
    <div class="box-col">
        <h4>&nbsp;</h4>
        <p>Custom aggregate functions are supported.</p>
    </div>
</div>
<script>
    $(".box").bind("change", refresh);

    function refresh() {
        var chart = $("#chart").data("kendoChart"),
        series = chart.options.series,
        categoryAxis = chart.options.categoryAxis,
        baseUnitInputs = $("input:radio[name=baseUnit]"),
        aggregateInputs = $("input:radio[name=aggregate]");

        for (var i = 0, length = series.length; i < length; i++) {
            series[i].aggregate = aggregateInputs.filter(":checked").val();
        }

        categoryAxis.baseUnit = baseUnitInputs.filter(":checked").val();

        chart.refresh();
    }
</script>
<div>
    @(Html.Kendo().Grid(Model)
                                        .Name("grid")
                                        .Columns(columns =>
                                        {
                                            columns.Bound(c => c.created_time)
                                            .ClientTemplate(
                                                @"<div class='customer-photo'
style='background-image: url(" + @Url.Content("~/content/web/Customers/#:data.CustomerID#.jpg") + ");'></div><div class='customer-name'>#: ContactName #</div>")
                                              .Width(240);

                                //  columns.Command(command=>command.Custom("custom").Text("Details").Action("Details","Home"));
                                columns.Bound(c => c.rating);
                                            columns.Bound(c => c.review_text);
                                            columns.Bound(c => c.reviewer.name);

                                        })
                                .HtmlAttributes(new { style = "height: 550px;" })
                                .Scrollable()
                                .Groupable()
                                .Sortable()
                                .Filterable()
                                .Pageable(pageable => pageable
                                    .Refresh(true)
                                    .PageSizes(true)
                                    .ButtonCount(5))
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .Read(read => read.Action("Customers_Read", "Grid"))
                                    .PageSize(20)
                                )
    )
</div>


<style>
    .customer-photo {
        display: inline-block;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-size: 32px 35px;
        background-position: center center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-left: 5px;
    }

    .customer-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 32px;
        padding-left: 3px;
    }
</style>


<p>
    @*@Html.ActionLink("Edit", "Edit", new { id = Model.id }) |*@
    @Html.ActionLink("Back to List", "FacebookCallback3")
</p>